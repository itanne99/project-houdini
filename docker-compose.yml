services:
  backend-fastapi:
    build:
      context: ./backend
    container_name: project-houdini-backend-fastapi
    profiles:
      - backend
      - dev
    env_file:
      - environment.env
    volumes:
      - ./backend:/code
    depends_on:
      database-postgres:
        condition: service_healthy
    networks:
      backend-database: null
    ports:
      - mode: ingress
        target: 80
        published: "81"
        protocol: tcp
    restart: always
  database-postgres:
    container_name: project-houdini-db-postgres
    profiles:
      - backend
      - dev
      - nextjs
    env_file:
      - environment.env
    image: postgres
    networks:
      backend-database: null
    ports:
      - mode: ingress
        target: 5432
        published: "5432"
        protocol: tcp
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U magician"]
      interval: 1s
      retries: 30
    restart: always
    volumes:
      - ./database/data:/var/lib/postgresql/data
      - ./database/postgresql.conf:/etc/postgresql.conf
  nextjs:
    container_name: project-houdini-nextjs
    build:
      context: ./nextjs
      target: dev
    profiles:
      - dev
      - nextjs
    networks:
      backend-database: null
    restart: always
    command: yarn dev
    environment:
      - NODE_ENV=development
    volumes:
      - ./nextjs:/app
      - /app/node_modules
      - /app/.next
    ports:
      - 3000:3000
networks:
  backend-database: {}
